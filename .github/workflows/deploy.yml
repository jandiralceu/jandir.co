name: Production

on:
  push:
    branches:
      - main

jobs:
  build:
    environment: production
    runs-on: ubuntu-22.04

    steps:
      - name: üèÉ‚Äç Checkout
        uses: actions/checkout@v4

      - name: üìå Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "yarn"

      - name: ‚è≥ Install dependencies
        run: yarn install

      - name: üèóÔ∏è Build
        run: yarn build
        env:
          GATSBY_ALGOLIA_APP_ID: ${{ secrets.GATSBY_ALGOLIA_APP_ID }}
          GATSBY_ALGOLIA_INDEX_NAME: ${{ secrets.GATSBY_ALGOLIA_INDEX_NAME }}
          GATSBY_ALGOLIA_SEARCH_KEY: ${{ secrets.GATSBY_ALGOLIA_SEARCH_KEY }}
          GATSBY_GOOGLE_TAG_MANAGER_ID: ${{ secrets.GATSBY_GOOGLE_TAG_MANAGER_ID}}
          ALGOLIA_ADMIN_KEY: ${{ secrets.ALGOLIA_ADMIN_KEY }}
          ALGOLIA_API_KEY: ${{ secrets.ALGOLIA_API_KEY }}

      - name: üì¶ Packing build as artifact
        uses: actions/upload-artifact@v4
        with:
          name: public
          path: public/
          retention-days: 1
  deploy:
    needs: build
    runs-on: ubuntu-22.04

    steps:
      - name: üèÉ‚Äç Checkout
        uses: actions/checkout@v4

      - name: üíª Download artifact
        uses: actions/download-artifact@v4
        with:
          name: public
          path: public

      - uses: kersvers/s3-sync-with-cloudfront-invalidation@v1.0.0
        name: üöÄ Deploy to S3 and invalidate CloudFront cache
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_S3_BUCKET: ${{ secrets.AWS_BUCKET_NAME }}
          DISTRIBUTION_ID: ${{ secrets.AWS_DISTRIBUTION_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: "public"
